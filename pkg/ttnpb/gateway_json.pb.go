// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json v1.1.0
// - protoc             v3.9.1
// source: lorawan-stack/api/gateway.proto

package ttnpb

import (
	gogo "github.com/TheThingsIndustries/protoc-gen-go-json/gogo"
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
)

// MarshalProtoJSON marshals the GatewayAntennaPlacement to JSON.
func (x GatewayAntennaPlacement) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	s.WriteEnumString(int32(x), GatewayAntennaPlacement_name)
}

// GatewayAntennaPlacement_customvalue contains custom string values that extend GatewayAntennaPlacement_value.
var GatewayAntennaPlacement_customvalue = map[string]int32{
	"UNKNOWN": 0,
}

// UnmarshalProtoJSON unmarshals the GatewayAntennaPlacement from JSON.
func (x *GatewayAntennaPlacement) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	v := s.ReadEnum(GatewayAntennaPlacement_value, GatewayAntennaPlacement_customvalue)
	if err := s.Err(); err != nil {
		s.SetErrorf("could not read GatewayAntennaPlacement enum: %v", err)
		return
	}
	*x = GatewayAntennaPlacement(v)
}

// MarshalProtoJSON marshals the Gateway message to JSON.
func (x *Gateway) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Ids != nil || s.HasField("ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("ids")
		// NOTE: GatewayIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.Ids)
	}
	if x.CreatedAt != nil || s.HasField("created_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("created_at")
		if x.CreatedAt == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.CreatedAt)
		}
	}
	if x.UpdatedAt != nil || s.HasField("updated_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("updated_at")
		if x.UpdatedAt == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.UpdatedAt)
		}
	}
	if x.DeletedAt != nil || s.HasField("deleted_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("deleted_at")
		if x.DeletedAt == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.DeletedAt)
		}
	}
	if x.Name != "" || s.HasField("name") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("name")
		s.WriteString(x.Name)
	}
	if x.Description != "" || s.HasField("description") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("description")
		s.WriteString(x.Description)
	}
	if x.Attributes != nil || s.HasField("attributes") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("attributes")
		s.WriteObjectStart()
		var wroteElement bool
		for k, v := range x.Attributes {
			s.WriteMoreIf(&wroteElement)
			s.WriteObjectStringField(k)
			s.WriteString(v)
		}
		s.WriteObjectEnd()
	}
	if len(x.ContactInfo) > 0 || s.HasField("contact_info") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("contact_info")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.ContactInfo {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("contact_info"))
		}
		s.WriteArrayEnd()
	}
	if x.VersionIds != nil || s.HasField("version_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("version_ids")
		// NOTE: GatewayVersionIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.VersionIds)
	}
	if x.GatewayServerAddress != "" || s.HasField("gateway_server_address") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway_server_address")
		s.WriteString(x.GatewayServerAddress)
	}
	if x.AutoUpdate || s.HasField("auto_update") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("auto_update")
		s.WriteBool(x.AutoUpdate)
	}
	if x.UpdateChannel != "" || s.HasField("update_channel") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("update_channel")
		s.WriteString(x.UpdateChannel)
	}
	if x.FrequencyPlanId != "" || s.HasField("frequency_plan_id") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("frequency_plan_id")
		s.WriteString(x.FrequencyPlanId)
	}
	if len(x.FrequencyPlanIds) > 0 || s.HasField("frequency_plan_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("frequency_plan_ids")
		s.WriteStringArray(x.FrequencyPlanIds)
	}
	if len(x.Antennas) > 0 || s.HasField("antennas") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("antennas")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.Antennas {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("antennas"))
		}
		s.WriteArrayEnd()
	}
	if x.StatusPublic || s.HasField("status_public") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("status_public")
		s.WriteBool(x.StatusPublic)
	}
	if x.LocationPublic || s.HasField("location_public") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("location_public")
		s.WriteBool(x.LocationPublic)
	}
	if x.ScheduleDownlinkLate || s.HasField("schedule_downlink_late") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("schedule_downlink_late")
		s.WriteBool(x.ScheduleDownlinkLate)
	}
	if x.EnforceDutyCycle || s.HasField("enforce_duty_cycle") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("enforce_duty_cycle")
		s.WriteBool(x.EnforceDutyCycle)
	}
	if x.DownlinkPathConstraint != 0 || s.HasField("downlink_path_constraint") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink_path_constraint")
		x.DownlinkPathConstraint.MarshalProtoJSON(s)
	}
	if x.ScheduleAnytimeDelay != nil || s.HasField("schedule_anytime_delay") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("schedule_anytime_delay")
		if x.ScheduleAnytimeDelay == nil {
			s.WriteNil()
		} else {
			gogo.MarshalDuration(s, x.ScheduleAnytimeDelay)
		}
	}
	if x.UpdateLocationFromStatus || s.HasField("update_location_from_status") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("update_location_from_status")
		s.WriteBool(x.UpdateLocationFromStatus)
	}
	if x.LbsLnsSecret != nil || s.HasField("lbs_lns_secret") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("lbs_lns_secret")
		// NOTE: Secret does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.LbsLnsSecret)
	}
	if x.ClaimAuthenticationCode != nil || s.HasField("claim_authentication_code") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("claim_authentication_code")
		// NOTE: GatewayClaimAuthenticationCode does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.ClaimAuthenticationCode)
	}
	if x.TargetCupsUri != "" || s.HasField("target_cups_uri") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("target_cups_uri")
		s.WriteString(x.TargetCupsUri)
	}
	if x.TargetCupsKey != nil || s.HasField("target_cups_key") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("target_cups_key")
		// NOTE: Secret does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.TargetCupsKey)
	}
	if x.RequireAuthenticatedConnection || s.HasField("require_authenticated_connection") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("require_authenticated_connection")
		s.WriteBool(x.RequireAuthenticatedConnection)
	}
	if x.Lrfhss != nil || s.HasField("lrfhss") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("lrfhss")
		// NOTE: Gateway_LRFHSS does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.Lrfhss)
	}
	if x.DisablePacketBrokerForwarding || s.HasField("disable_packet_broker_forwarding") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("disable_packet_broker_forwarding")
		s.WriteBool(x.DisablePacketBrokerForwarding)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the Gateway message from JSON.
func (x *Gateway) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "ids":
			s.AddField("ids")
			// NOTE: GatewayIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v GatewayIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.Ids = &v
		case "created_at", "createdAt":
			s.AddField("created_at")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.CreatedAt = v
		case "updated_at", "updatedAt":
			s.AddField("updated_at")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.UpdatedAt = v
		case "deleted_at", "deletedAt":
			s.AddField("deleted_at")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.DeletedAt = v
		case "name":
			s.AddField("name")
			x.Name = s.ReadString()
		case "description":
			s.AddField("description")
			x.Description = s.ReadString()
		case "attributes":
			s.AddField("attributes")
			x.Attributes = make(map[string]string)
			s.ReadStringMap(func(key string) {
				x.Attributes[key] = s.ReadString()
			})
		case "contact_info", "contactInfo":
			s.AddField("contact_info")
			s.ReadArray(func() {
				if s.ReadNil() {
					x.ContactInfo = append(x.ContactInfo, nil)
					return
				}
				v := &ContactInfo{}
				v.UnmarshalProtoJSON(s.WithField("contact_info", false))
				if s.Err() != nil {
					return
				}
				x.ContactInfo = append(x.ContactInfo, v)
			})
		case "version_ids", "versionIds":
			s.AddField("version_ids")
			// NOTE: GatewayVersionIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v GatewayVersionIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.VersionIds = &v
		case "gateway_server_address", "gatewayServerAddress":
			s.AddField("gateway_server_address")
			x.GatewayServerAddress = s.ReadString()
		case "auto_update", "autoUpdate":
			s.AddField("auto_update")
			x.AutoUpdate = s.ReadBool()
		case "update_channel", "updateChannel":
			s.AddField("update_channel")
			x.UpdateChannel = s.ReadString()
		case "frequency_plan_id", "frequencyPlanId":
			s.AddField("frequency_plan_id")
			x.FrequencyPlanId = s.ReadString()
		case "frequency_plan_ids", "frequencyPlanIds":
			s.AddField("frequency_plan_ids")
			x.FrequencyPlanIds = s.ReadStringArray()
		case "antennas":
			s.AddField("antennas")
			s.ReadArray(func() {
				if s.ReadNil() {
					x.Antennas = append(x.Antennas, nil)
					return
				}
				v := &GatewayAntenna{}
				v.UnmarshalProtoJSON(s.WithField("antennas", false))
				if s.Err() != nil {
					return
				}
				x.Antennas = append(x.Antennas, v)
			})
		case "status_public", "statusPublic":
			s.AddField("status_public")
			x.StatusPublic = s.ReadBool()
		case "location_public", "locationPublic":
			s.AddField("location_public")
			x.LocationPublic = s.ReadBool()
		case "schedule_downlink_late", "scheduleDownlinkLate":
			s.AddField("schedule_downlink_late")
			x.ScheduleDownlinkLate = s.ReadBool()
		case "enforce_duty_cycle", "enforceDutyCycle":
			s.AddField("enforce_duty_cycle")
			x.EnforceDutyCycle = s.ReadBool()
		case "downlink_path_constraint", "downlinkPathConstraint":
			s.AddField("downlink_path_constraint")
			x.DownlinkPathConstraint.UnmarshalProtoJSON(s)
		case "schedule_anytime_delay", "scheduleAnytimeDelay":
			s.AddField("schedule_anytime_delay")
			v := gogo.UnmarshalDuration(s)
			if s.Err() != nil {
				return
			}
			x.ScheduleAnytimeDelay = v
		case "update_location_from_status", "updateLocationFromStatus":
			s.AddField("update_location_from_status")
			x.UpdateLocationFromStatus = s.ReadBool()
		case "lbs_lns_secret", "lbsLnsSecret":
			s.AddField("lbs_lns_secret")
			// NOTE: Secret does not seem to implement UnmarshalProtoJSON.
			var v Secret
			gogo.UnmarshalMessage(s, &v)
			x.LbsLnsSecret = &v
		case "claim_authentication_code", "claimAuthenticationCode":
			s.AddField("claim_authentication_code")
			// NOTE: GatewayClaimAuthenticationCode does not seem to implement UnmarshalProtoJSON.
			var v GatewayClaimAuthenticationCode
			gogo.UnmarshalMessage(s, &v)
			x.ClaimAuthenticationCode = &v
		case "target_cups_uri", "targetCupsUri":
			s.AddField("target_cups_uri")
			x.TargetCupsUri = s.ReadString()
		case "target_cups_key", "targetCupsKey":
			s.AddField("target_cups_key")
			// NOTE: Secret does not seem to implement UnmarshalProtoJSON.
			var v Secret
			gogo.UnmarshalMessage(s, &v)
			x.TargetCupsKey = &v
		case "require_authenticated_connection", "requireAuthenticatedConnection":
			s.AddField("require_authenticated_connection")
			x.RequireAuthenticatedConnection = s.ReadBool()
		case "lrfhss":
			s.AddField("lrfhss")
			// NOTE: Gateway_LRFHSS does not seem to implement UnmarshalProtoJSON.
			var v Gateway_LRFHSS
			gogo.UnmarshalMessage(s, &v)
			x.Lrfhss = &v
		case "disable_packet_broker_forwarding", "disablePacketBrokerForwarding":
			s.AddField("disable_packet_broker_forwarding")
			x.DisablePacketBrokerForwarding = s.ReadBool()
		}
	})
}

// MarshalProtoJSON marshals the Gateways message to JSON.
func (x *Gateways) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.Gateways) > 0 || s.HasField("gateways") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateways")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.Gateways {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("gateways"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the Gateways message from JSON.
func (x *Gateways) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateways":
			s.AddField("gateways")
			s.ReadArray(func() {
				if s.ReadNil() {
					x.Gateways = append(x.Gateways, nil)
					return
				}
				v := &Gateway{}
				v.UnmarshalProtoJSON(s.WithField("gateways", false))
				if s.Err() != nil {
					return
				}
				x.Gateways = append(x.Gateways, v)
			})
		}
	})
}

// MarshalProtoJSON marshals the CreateGatewayRequest message to JSON.
func (x *CreateGatewayRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Gateway != nil || s.HasField("gateway") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway")
		x.Gateway.MarshalProtoJSON(s.WithField("gateway"))
	}
	if x.Collaborator != nil || s.HasField("collaborator") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("collaborator")
		// NOTE: OrganizationOrUserIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.Collaborator)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the CreateGatewayRequest message from JSON.
func (x *CreateGatewayRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateway":
			if !s.ReadNil() {
				x.Gateway = &Gateway{}
				x.Gateway.UnmarshalProtoJSON(s.WithField("gateway", true))
			}
		case "collaborator":
			s.AddField("collaborator")
			// NOTE: OrganizationOrUserIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v OrganizationOrUserIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.Collaborator = &v
		}
	})
}

// MarshalProtoJSON marshals the UpdateGatewayRequest message to JSON.
func (x *UpdateGatewayRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Gateway != nil || s.HasField("gateway") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway")
		x.Gateway.MarshalProtoJSON(s.WithField("gateway"))
	}
	if x.FieldMask != nil || s.HasField("field_mask") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		if x.FieldMask == nil {
			s.WriteNil()
		} else {
			gogo.MarshalFieldMask(s, x.FieldMask)
		}
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the UpdateGatewayRequest message from JSON.
func (x *UpdateGatewayRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateway":
			if !s.ReadNil() {
				x.Gateway = &Gateway{}
				x.Gateway.UnmarshalProtoJSON(s.WithField("gateway", true))
			}
		case "field_mask", "fieldMask":
			s.AddField("field_mask")
			v := gogo.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// MarshalProtoJSON marshals the CreateGatewayAPIKeyRequest message to JSON.
func (x *CreateGatewayAPIKeyRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.GatewayIds != nil || s.HasField("gateway_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway_ids")
		// NOTE: GatewayIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.GatewayIds)
	}
	if x.Name != "" || s.HasField("name") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("name")
		s.WriteString(x.Name)
	}
	if len(x.Rights) > 0 || s.HasField("rights") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rights")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.Rights {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s)
		}
		s.WriteArrayEnd()
	}
	if x.ExpiresAt != nil || s.HasField("expires_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("expires_at")
		if x.ExpiresAt == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.ExpiresAt)
		}
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the CreateGatewayAPIKeyRequest message from JSON.
func (x *CreateGatewayAPIKeyRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateway_ids", "gatewayIds":
			s.AddField("gateway_ids")
			// NOTE: GatewayIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v GatewayIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.GatewayIds = &v
		case "name":
			s.AddField("name")
			x.Name = s.ReadString()
		case "rights":
			s.AddField("rights")
			s.ReadArray(func() {
				var v Right
				v.UnmarshalProtoJSON(s)
				x.Rights = append(x.Rights, v)
			})
		case "expires_at", "expiresAt":
			s.AddField("expires_at")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.ExpiresAt = v
		}
	})
}

// MarshalProtoJSON marshals the UpdateGatewayAPIKeyRequest message to JSON.
func (x *UpdateGatewayAPIKeyRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.GatewayIds != nil || s.HasField("gateway_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway_ids")
		// NOTE: GatewayIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.GatewayIds)
	}
	if x.ApiKey != nil || s.HasField("api_key") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("api_key")
		x.ApiKey.MarshalProtoJSON(s.WithField("api_key"))
	}
	if x.FieldMask != nil || s.HasField("field_mask") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("field_mask")
		if x.FieldMask == nil {
			s.WriteNil()
		} else {
			gogo.MarshalFieldMask(s, x.FieldMask)
		}
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the UpdateGatewayAPIKeyRequest message from JSON.
func (x *UpdateGatewayAPIKeyRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateway_ids", "gatewayIds":
			s.AddField("gateway_ids")
			// NOTE: GatewayIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v GatewayIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.GatewayIds = &v
		case "api_key", "apiKey":
			if !s.ReadNil() {
				x.ApiKey = &APIKey{}
				x.ApiKey.UnmarshalProtoJSON(s.WithField("api_key", true))
			}
		case "field_mask", "fieldMask":
			s.AddField("field_mask")
			v := gogo.UnmarshalFieldMask(s)
			if s.Err() != nil {
				return
			}
			x.FieldMask = v
		}
	})
}

// MarshalProtoJSON marshals the SetGatewayCollaboratorRequest message to JSON.
func (x *SetGatewayCollaboratorRequest) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.GatewayIds != nil || s.HasField("gateway_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway_ids")
		// NOTE: GatewayIdentifiers does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.GatewayIds)
	}
	if x.Collaborator != nil || s.HasField("collaborator") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("collaborator")
		x.Collaborator.MarshalProtoJSON(s.WithField("collaborator"))
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the SetGatewayCollaboratorRequest message from JSON.
func (x *SetGatewayCollaboratorRequest) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateway_ids", "gatewayIds":
			s.AddField("gateway_ids")
			// NOTE: GatewayIdentifiers does not seem to implement UnmarshalProtoJSON.
			var v GatewayIdentifiers
			gogo.UnmarshalMessage(s, &v)
			x.GatewayIds = &v
		case "collaborator":
			if !s.ReadNil() {
				x.Collaborator = &Collaborator{}
				x.Collaborator.UnmarshalProtoJSON(s.WithField("collaborator", true))
			}
		}
	})
}

// MarshalProtoJSON marshals the GatewayAntenna message to JSON.
func (x *GatewayAntenna) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Gain != 0 || s.HasField("gain") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gain")
		s.WriteFloat32(x.Gain)
	}
	if x.Location != nil || s.HasField("location") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("location")
		x.Location.MarshalProtoJSON(s.WithField("location"))
	}
	if x.Attributes != nil || s.HasField("attributes") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("attributes")
		s.WriteObjectStart()
		var wroteElement bool
		for k, v := range x.Attributes {
			s.WriteMoreIf(&wroteElement)
			s.WriteObjectStringField(k)
			s.WriteString(v)
		}
		s.WriteObjectEnd()
	}
	if x.Placement != 0 || s.HasField("placement") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("placement")
		x.Placement.MarshalProtoJSON(s)
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the GatewayAntenna message from JSON.
func (x *GatewayAntenna) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gain":
			s.AddField("gain")
			x.Gain = s.ReadFloat32()
		case "location":
			if !s.ReadNil() {
				x.Location = &Location{}
				x.Location.UnmarshalProtoJSON(s.WithField("location", true))
			}
		case "attributes":
			s.AddField("attributes")
			x.Attributes = make(map[string]string)
			s.ReadStringMap(func(key string) {
				x.Attributes[key] = s.ReadString()
			})
		case "placement":
			s.AddField("placement")
			x.Placement.UnmarshalProtoJSON(s)
		}
	})
}

// MarshalProtoJSON marshals the GatewayStatus message to JSON.
func (x *GatewayStatus) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Time != nil || s.HasField("time") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("time")
		if x.Time == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.Time)
		}
	}
	if x.BootTime != nil || s.HasField("boot_time") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("boot_time")
		if x.BootTime == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.BootTime)
		}
	}
	if x.Versions != nil || s.HasField("versions") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("versions")
		s.WriteObjectStart()
		var wroteElement bool
		for k, v := range x.Versions {
			s.WriteMoreIf(&wroteElement)
			s.WriteObjectStringField(k)
			s.WriteString(v)
		}
		s.WriteObjectEnd()
	}
	if len(x.AntennaLocations) > 0 || s.HasField("antenna_locations") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("antenna_locations")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.AntennaLocations {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("antenna_locations"))
		}
		s.WriteArrayEnd()
	}
	if len(x.Ip) > 0 || s.HasField("ip") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("ip")
		s.WriteStringArray(x.Ip)
	}
	if x.Metrics != nil || s.HasField("metrics") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("metrics")
		s.WriteObjectStart()
		var wroteElement bool
		for k, v := range x.Metrics {
			s.WriteMoreIf(&wroteElement)
			s.WriteObjectStringField(k)
			s.WriteFloat32(v)
		}
		s.WriteObjectEnd()
	}
	if x.Advanced != nil || s.HasField("advanced") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("advanced")
		if x.Advanced == nil {
			s.WriteNil()
		} else {
			gogo.MarshalStruct(s, x.Advanced)
		}
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the GatewayStatus message from JSON.
func (x *GatewayStatus) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "time":
			s.AddField("time")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.Time = v
		case "boot_time", "bootTime":
			s.AddField("boot_time")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.BootTime = v
		case "versions":
			s.AddField("versions")
			x.Versions = make(map[string]string)
			s.ReadStringMap(func(key string) {
				x.Versions[key] = s.ReadString()
			})
		case "antenna_locations", "antennaLocations":
			s.AddField("antenna_locations")
			s.ReadArray(func() {
				if s.ReadNil() {
					x.AntennaLocations = append(x.AntennaLocations, nil)
					return
				}
				v := &Location{}
				v.UnmarshalProtoJSON(s.WithField("antenna_locations", false))
				if s.Err() != nil {
					return
				}
				x.AntennaLocations = append(x.AntennaLocations, v)
			})
		case "ip":
			s.AddField("ip")
			x.Ip = s.ReadStringArray()
		case "metrics":
			s.AddField("metrics")
			x.Metrics = make(map[string]float32)
			s.ReadStringMap(func(key string) {
				x.Metrics[key] = s.ReadFloat32()
			})
		case "advanced":
			s.AddField("advanced")
			v := gogo.UnmarshalStruct(s)
			if s.Err() != nil {
				return
			}
			x.Advanced = v
		}
	})
}

// MarshalProtoJSON marshals the GatewayConnectionStats message to JSON.
func (x *GatewayConnectionStats) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.ConnectedAt != nil || s.HasField("connected_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("connected_at")
		if x.ConnectedAt == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.ConnectedAt)
		}
	}
	if x.Protocol != "" || s.HasField("protocol") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("protocol")
		s.WriteString(x.Protocol)
	}
	if x.LastStatusReceivedAt != nil || s.HasField("last_status_received_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("last_status_received_at")
		if x.LastStatusReceivedAt == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.LastStatusReceivedAt)
		}
	}
	if x.LastStatus != nil || s.HasField("last_status") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("last_status")
		x.LastStatus.MarshalProtoJSON(s.WithField("last_status"))
	}
	if x.LastUplinkReceivedAt != nil || s.HasField("last_uplink_received_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("last_uplink_received_at")
		if x.LastUplinkReceivedAt == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.LastUplinkReceivedAt)
		}
	}
	if x.UplinkCount != 0 || s.HasField("uplink_count") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("uplink_count")
		s.WriteUint64(x.UplinkCount)
	}
	if x.LastDownlinkReceivedAt != nil || s.HasField("last_downlink_received_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("last_downlink_received_at")
		if x.LastDownlinkReceivedAt == nil {
			s.WriteNil()
		} else {
			gogo.MarshalTimestamp(s, x.LastDownlinkReceivedAt)
		}
	}
	if x.DownlinkCount != 0 || s.HasField("downlink_count") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("downlink_count")
		s.WriteUint64(x.DownlinkCount)
	}
	if x.RoundTripTimes != nil || s.HasField("round_trip_times") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("round_trip_times")
		// NOTE: GatewayConnectionStats_RoundTripTimes does not seem to implement MarshalProtoJSON.
		gogo.MarshalMessage(s, x.RoundTripTimes)
	}
	if len(x.SubBands) > 0 || s.HasField("sub_bands") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("sub_bands")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.SubBands {
			s.WriteMoreIf(&wroteElement)
			// NOTE: GatewayConnectionStats_SubBand does not seem to implement MarshalProtoJSON.
			gogo.MarshalMessage(s, element)
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// UnmarshalProtoJSON unmarshals the GatewayConnectionStats message from JSON.
func (x *GatewayConnectionStats) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "connected_at", "connectedAt":
			s.AddField("connected_at")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.ConnectedAt = v
		case "protocol":
			s.AddField("protocol")
			x.Protocol = s.ReadString()
		case "last_status_received_at", "lastStatusReceivedAt":
			s.AddField("last_status_received_at")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.LastStatusReceivedAt = v
		case "last_status", "lastStatus":
			if !s.ReadNil() {
				x.LastStatus = &GatewayStatus{}
				x.LastStatus.UnmarshalProtoJSON(s.WithField("last_status", true))
			}
		case "last_uplink_received_at", "lastUplinkReceivedAt":
			s.AddField("last_uplink_received_at")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.LastUplinkReceivedAt = v
		case "uplink_count", "uplinkCount":
			s.AddField("uplink_count")
			x.UplinkCount = s.ReadUint64()
		case "last_downlink_received_at", "lastDownlinkReceivedAt":
			s.AddField("last_downlink_received_at")
			v := gogo.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.LastDownlinkReceivedAt = v
		case "downlink_count", "downlinkCount":
			s.AddField("downlink_count")
			x.DownlinkCount = s.ReadUint64()
		case "round_trip_times", "roundTripTimes":
			s.AddField("round_trip_times")
			// NOTE: GatewayConnectionStats_RoundTripTimes does not seem to implement UnmarshalProtoJSON.
			var v GatewayConnectionStats_RoundTripTimes
			gogo.UnmarshalMessage(s, &v)
			x.RoundTripTimes = &v
		case "sub_bands", "subBands":
			s.AddField("sub_bands")
			s.ReadArray(func() {
				// NOTE: GatewayConnectionStats_SubBand does not seem to implement UnmarshalProtoJSON.
				var v GatewayConnectionStats_SubBand
				gogo.UnmarshalMessage(s, &v)
				x.SubBands = append(x.SubBands, &v)
			})
		}
	})
}
